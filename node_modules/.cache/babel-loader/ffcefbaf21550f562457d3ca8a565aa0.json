{"ast":null,"code":"import { getAuth, createUserWithEmailAndPassword, updateProfile, onAuthStateChanged, signInWithEmailAndPassword, signOut } from \"firebase/auth\";\nimport { FIREBASE_UID } from \"../store/constants\";\nimport { app, database } from \"./firebase\";\nimport { getDatabase, off, ref, set, push, onValue, child } from \"firebase/database\";\nimport { v4 } from \"uuid\";\nconst registerWithEmailAndPassword = async User => {\n  var user = null;\n  let fullname = User.fullname;\n  let username = User.username;\n  let password = User.password;\n  const auth = getAuth(app);\n  await createUserWithEmailAndPassword(auth, username, password).then(userCredential => {\n    // Signed in \n    user = userCredential.user;\n    // ...\n  }).catch(error => {\n    const errorMessage = error.message;\n    console.log(errorMessage);\n    // ...\n  });\n\n  return user;\n};\nconst logInWithEmailAndPassword = async User => {\n  var user = null;\n  let username = User.username;\n  let password = User.password;\n  const auth = getAuth(app);\n  await signInWithEmailAndPassword(auth, username, password).then(userCredential => {\n    user = userCredential.user;\n    CheckUserLoggedIn();\n  }).catch(error => {\n    const errorMessage = error.message;\n    console.log(errorMessage);\n    // ...\n  });\n\n  return user;\n};\nconst CheckUserLoggedIn = () => {\n  const auth = getAuth(app);\n  onAuthStateChanged(auth, user => {\n    if (user) {\n      // User is signed in, see docs for a list of available properties\n      // https://firebase.google.com/docs/reference/js/firebase.User\n      const uid = user.uid;\n      localStorage.setItem(FIREBASE_UID, uid);\n      console.log(\"User logged in\", uid);\n      // ...\n    } else {\n      // User is signed out\n      // ...\n      console.log(\"User do not login\");\n    }\n  });\n};\n_c = CheckUserLoggedIn;\nconst logoutFunction = () => {\n  const auth = getAuth(app);\n  signOut(auth).then(() => {\n    localStorage.removeItem(FIREBASE_UID);\n    console.log(\"Sign out success\");\n  }).catch(error => {\n    console.log(\"Sign out failed\", error);\n  });\n};\nconst CheckLocalUID = () => {\n  return localStorage.getItem(FIREBASE_UID);\n};\n_c2 = CheckLocalUID;\nconst writeNewDiary = async content => {\n  const uid = localStorage.getItem(FIREBASE_UID);\n  if (uid !== null) {\n    const db = getDatabase(app);\n    const date = new Date();\n    const time_now = date.toLocaleString();\n    await set(ref(db, 'Diaries/' + uid + '/' + v4()), {\n      content,\n      created_at: time_now,\n      updated_at: time_now,\n      done: false,\n      show: true\n    });\n  }\n};\nconst getDiaries = () => {\n  var Diaries = [];\n  const uid = localStorage.getItem(FIREBASE_UID);\n  const db = getDatabase(app);\n  const postListRef = ref(db, 'Diaries/' + uid + '/');\n  onValue(postListRef, snapshot => {\n    let listDiaries = [];\n    snapshot.forEach(childSnapshot => {\n      let key = childSnapshot.key;\n      let data = childSnapshot.val();\n      listDiaries.push({\n        \"key\": key,\n        \"data\": data\n      });\n    });\n    listDiaries.forEach(diary => {\n      Diaries.push(diary);\n    });\n    return Diaries;\n  });\n};\nexport { registerWithEmailAndPassword, logInWithEmailAndPassword, CheckUserLoggedIn, logoutFunction, CheckLocalUID, writeNewDiary, getDiaries };\nvar _c, _c2;\n$RefreshReg$(_c, \"CheckUserLoggedIn\");\n$RefreshReg$(_c2, \"CheckLocalUID\");","map":{"version":3,"names":["getAuth","createUserWithEmailAndPassword","updateProfile","onAuthStateChanged","signInWithEmailAndPassword","signOut","FIREBASE_UID","app","database","getDatabase","off","ref","set","push","onValue","child","v4","registerWithEmailAndPassword","User","user","fullname","username","password","auth","then","userCredential","catch","error","errorMessage","message","console","log","logInWithEmailAndPassword","CheckUserLoggedIn","uid","localStorage","setItem","logoutFunction","removeItem","CheckLocalUID","getItem","writeNewDiary","content","db","date","Date","time_now","toLocaleString","created_at","updated_at","done","show","getDiaries","Diaries","postListRef","snapshot","listDiaries","forEach","childSnapshot","key","data","val","diary"],"sources":["/Users/kaismac/Tech/synote/src/config/functions.js"],"sourcesContent":["import {\n    getAuth,\n    createUserWithEmailAndPassword,\n    updateProfile,\n    onAuthStateChanged,\n    signInWithEmailAndPassword,\n    signOut\n} from \"firebase/auth\";\nimport { FIREBASE_UID } from \"../store/constants\";\nimport { app, database } from \"./firebase\";\nimport {\n    getDatabase,\n    off,\n    ref,\n    set,\n    push,\n    onValue,\n    child\n} from \"firebase/database\";\nimport { v4 } from \"uuid\";\n\nconst registerWithEmailAndPassword = async (User) => {\n    var user = null;\n    let fullname = User.fullname\n    let username = User.username\n    let password = User.password\n\n\n    const auth = getAuth(app);\n    await createUserWithEmailAndPassword(auth, username, password)\n        .then((userCredential) => {\n            // Signed in \n            user = userCredential.user;\n            // ...\n        })\n        .catch((error) => {\n            const errorMessage = error.message;\n            console.log(errorMessage)\n            // ...\n        });\n\n    return user;\n}\n\nconst logInWithEmailAndPassword = async (User) => {\n    var user = null;\n\n    let username = User.username\n    let password = User.password\n\n    const auth = getAuth(app)\n    await signInWithEmailAndPassword(auth, username, password)\n        .then((userCredential) => {\n            user = userCredential.user;\n            CheckUserLoggedIn()\n        })\n        .catch((error) => {\n            const errorMessage = error.message;\n            console.log(errorMessage)\n            // ...\n        });\n\n    return user;\n}\n\nconst CheckUserLoggedIn = () => {\n    const auth = getAuth(app);\n    onAuthStateChanged(auth, (user) => {\n        if (user) {\n            // User is signed in, see docs for a list of available properties\n            // https://firebase.google.com/docs/reference/js/firebase.User\n            const uid = user.uid;\n            localStorage.setItem(FIREBASE_UID, uid)\n            console.log(\"User logged in\", uid)\n            // ...\n        } else {\n            // User is signed out\n            // ...\n            console.log(\"User do not login\")\n        }\n    });\n}\n\nconst logoutFunction = () => {\n    const auth = getAuth(app);\n    signOut(auth)\n        .then(() => {\n            localStorage.removeItem(FIREBASE_UID)\n            console.log(\"Sign out success\")\n        })\n        .catch((error) => {\n            console.log(\"Sign out failed\", error)\n        })\n}\n\nconst CheckLocalUID = () => {\n    return localStorage.getItem(FIREBASE_UID);\n}\n\n\nconst writeNewDiary = async content => {\n    const uid = localStorage.getItem(FIREBASE_UID)\n    if (uid !== null) {\n        const db = getDatabase(app)\n        const date = new Date();\n        const time_now = date.toLocaleString();\n        await set(ref(db, 'Diaries/' + uid + '/' + v4()), {\n            content,\n            created_at: time_now,\n            updated_at: time_now,\n            done: false,\n            show: true,\n        });\n    }\n}\n\nconst getDiaries = () => {\n    var Diaries = []\n    const uid = localStorage.getItem(FIREBASE_UID)\n    const db = getDatabase(app);\n    const postListRef = ref(db, 'Diaries/' + uid + '/');\n    onValue(postListRef, (snapshot) => {\n        let listDiaries = []\n        snapshot.forEach(childSnapshot => {\n            let key = childSnapshot.key;\n            let data = childSnapshot.val();\n            listDiaries.push({ \"key\": key, \"data\": data })\n        });\n        listDiaries.forEach((diary) => {\n            Diaries.push(diary)\n        })\n        return Diaries\n    })\n}\n\nexport {\n    registerWithEmailAndPassword,\n    logInWithEmailAndPassword,\n    CheckUserLoggedIn,\n    logoutFunction,\n    CheckLocalUID,\n    writeNewDiary,\n    getDiaries\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}